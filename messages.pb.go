// Code generated by protoc-gen-go. DO NOT EDIT.
// source: uno/messages.proto

package uno

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_e5658c00c0f33ea6, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UnoMessage struct {
	No                   uint32   `protobuf:"varint,1,opt,name=no" json:"no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnoMessage) Reset()         { *m = UnoMessage{} }
func (m *UnoMessage) String() string { return proto.CompactTextString(m) }
func (*UnoMessage) ProtoMessage()    {}
func (*UnoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_e5658c00c0f33ea6, []int{1}
}
func (m *UnoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnoMessage.Unmarshal(m, b)
}
func (m *UnoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnoMessage.Marshal(b, m, deterministic)
}
func (dst *UnoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnoMessage.Merge(dst, src)
}
func (m *UnoMessage) XXX_Size() int {
	return xxx_messageInfo_UnoMessage.Size(m)
}
func (m *UnoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UnoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UnoMessage proto.InternalMessageInfo

func (m *UnoMessage) GetNo() uint32 {
	if m != nil {
		return m.No
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "uno.Empty")
	proto.RegisterType((*UnoMessage)(nil), "uno.UnoMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UnoClient is the client API for Uno service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UnoClient interface {
	Rent(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UnoMessage, error)
	Relet(ctx context.Context, in *UnoMessage, opts ...grpc.CallOption) (*Empty, error)
	Return(ctx context.Context, in *UnoMessage, opts ...grpc.CallOption) (*Empty, error)
}

type unoClient struct {
	cc *grpc.ClientConn
}

func NewUnoClient(cc *grpc.ClientConn) UnoClient {
	return &unoClient{cc}
}

func (c *unoClient) Rent(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UnoMessage, error) {
	out := new(UnoMessage)
	err := c.cc.Invoke(ctx, "/uno.Uno/Rent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unoClient) Relet(ctx context.Context, in *UnoMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/uno.Uno/Relet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unoClient) Return(ctx context.Context, in *UnoMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/uno.Uno/Return", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Uno service

type UnoServer interface {
	Rent(context.Context, *Empty) (*UnoMessage, error)
	Relet(context.Context, *UnoMessage) (*Empty, error)
	Return(context.Context, *UnoMessage) (*Empty, error)
}

func RegisterUnoServer(s *grpc.Server, srv UnoServer) {
	s.RegisterService(&_Uno_serviceDesc, srv)
}

func _Uno_Rent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnoServer).Rent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uno.Uno/Rent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnoServer).Rent(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Uno_Relet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnoServer).Relet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uno.Uno/Relet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnoServer).Relet(ctx, req.(*UnoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Uno_Return_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnoServer).Return(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uno.Uno/Return",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnoServer).Return(ctx, req.(*UnoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Uno_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uno.Uno",
	HandlerType: (*UnoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Rent",
			Handler:    _Uno_Rent_Handler,
		},
		{
			MethodName: "Relet",
			Handler:    _Uno_Relet_Handler,
		},
		{
			MethodName: "Return",
			Handler:    _Uno_Return_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uno/messages.proto",
}

func init() { proto.RegisterFile("uno/messages.proto", fileDescriptor_messages_e5658c00c0f33ea6) }

var fileDescriptor_messages_e5658c00c0f33ea6 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0xcd, 0xcb, 0xd7,
	0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2e, 0xcd, 0xcb, 0x57, 0x62, 0xe7, 0x62, 0x75, 0xcd, 0x2d, 0x28, 0xa9, 0x54, 0x92, 0xe1, 0xe2,
	0x0a, 0xcd, 0xcb, 0xf7, 0x85, 0x28, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0xcb, 0x97, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x0d, 0x62, 0xca, 0xcb, 0x37, 0xaa, 0xe5, 0x62, 0x0e, 0xcd, 0xcb, 0x17, 0x52, 0xe5,
	0x62, 0x09, 0x4a, 0xcd, 0x2b, 0x11, 0xe2, 0xd2, 0x2b, 0xcd, 0xcb, 0xd7, 0x03, 0x6b, 0x94, 0xe2,
	0x07, 0xb3, 0x11, 0x7a, 0x95, 0x18, 0x84, 0xd4, 0xb8, 0x58, 0x83, 0x52, 0x73, 0x52, 0x4b, 0x84,
	0xd0, 0xe5, 0xa4, 0x90, 0x34, 0x2a, 0x31, 0x08, 0xa9, 0x73, 0xb1, 0x05, 0xa5, 0x96, 0x94, 0x16,
	0xe5, 0x11, 0x50, 0x98, 0xc4, 0x06, 0x76, 0xb1, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x1b,
	0xc0, 0x75, 0xc7, 0x00, 0x00, 0x00,
}
